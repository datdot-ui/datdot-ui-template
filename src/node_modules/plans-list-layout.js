const bel = require('bel')
const csjs = require('csjs-inject')
const path = require('path')
const filename = path.basename(__filename)
const layout = require('layout')
const button = require('datdot-ui-button')
const svg = require('datdot-ui-graphic')
window.Swiper = require('swiper').default

module.exports = plansList

function plansList ({page}, protocol) {
    const widget = 'ui-plans-list'
    let recipients = []
    const send2Parent = protocol( createNewPlanReceive )
    const iconCreate = svg({css: `${css.icon} ${css.create}`, path: 'assets/plus.svg'})
    const iconCryFace = svg({css: `${css.icon} ${css['cry-face']}`, path: 'assets/cry-face.svg'})
    const section = layout({layoutName: 'plans', layoutStyle: css.plansList, content: myPlans()})
    
    send2Parent({page, from: 'plans-list', flow: widget, type: 'init', filename, line: 15})

    document.addEventListener('DOMContentLoaded', ()=> {
        const mySwiper = new Swiper(`.${css['swiper-container']}`, {
            speed: 300,
            slidesPerView: 5,
            slidesPerColumn: 2,
            spaceBetween: 4,
            breakpoints: {
                320: {
                    slidesPerView: 3,
                },
                // when window width is <= 640px
                640: {
                    slidesPerView: 4,
                }
            }
        })
        mySwiper.width = '100%'
    })

    // return whole view
    return section

    // create content
    function myPlans () {
        const createPlan = button({page, name: 'create-plan', content: iconCreate, style: 'solid', color: 'dark', custom: [css['create-plan']]}, createNewPlanProtocol('create-plan'))
        const planList = bel`<div class="swiper-wrapper ${css['plan-list']}"></div>`
        const swiperContainer = bel`<div class="${css['swiper-container']}"></div>`
        swiperContainer.append(planList)
        // display plan list
        createPlanItems()

        return bel`
        <header>
            <div class=${css['header-top']}>
                <h1 class=${css.title}>My plans</h1>
                <div class=${css['plan-counts']}>No plan yet ${iconCryFace}</div>
            </div>
            <div id="plans-group" class=${css['plans-group']} role="plans group">
                ${createPlan}
                <div class="${css.scrollable}">${swiperContainer}</div>
            </div>
        </header>`

        // create plan items
        function createPlanItems() {
            for (let i = 1; i < 13; i++) {
                let item = bel`<div index=${i} role="plan" class="swiper-slide ${css.plan}" aria-label="no plan">${i}</div>`
                planList.append(item)
            }
       }
    }

    function createNewPlanProtocol(name) {
        return send => {
            recipients[name] = send
            return createNewPlanReceive
        }
    }
    
    function createNewPlanReceive (message) {
        const { type } = message
        if (type === 'click') createPlanAction(message)
    }

    function createPlanAction (message) {
        const { page, from, flow, type, action, body, filename, line } = message
        recipients[from]({page, from: widget, type: 'disabled'})
        send2Parent({page, from, flow, type: 'create', filename, line: 61})
    }
}

const css = csjs`
.plansList {}
.header-top {
    display: grid;
    grid-template-rows: auto;
    grid-template-columns: repeat(2, 50%);
    align-items: flex-end;
    margin-bottom: 13px;
}
.title {
    font-size: 2.6rem;
}
.plan-counts {
    display: flex;
    font-size: 1.4rem;
    color: var(--grey70);
    justify-self: right;
}
.cry-face {
    width: 22px;
    margin-left: 10px;
}
.plans-group {
    display: flex;
    overflow: hidden;
    margin-right: -20px;
}
.create-plan {
    grid-row-start: span 2;
    display: grid;
    justify-content: center;
    align-content: center;
}
.icon {}
.create {
    width: 16px;
}
.plan-list {
    display: grid;
    grid-template-rows: repeat(2, 44px);
    grid-template-columns: repeat(13, minmax(auto, 145px) );
    grid-auto-flow: column;
    grid-gap:8px 4px;
}
.plan {
    width: 137px;
    height: 100%;
    background-color: var(--greyED); 
    border-radius: 8px;
    border: 1px dashed var(--grey88);
}
.scrollable {
    margin-left: 8px;
    width: 100%;
    height: 102px;
    overflow: hidden;
}
.swiper-container {
    width: 100%;
    height: 100%;
    max-width: 100%;
}
.swiper-slide {
    height: 44px;
}
`